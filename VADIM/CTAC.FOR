      PROGRAM CTAC
      IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
      DIMENSION CC(50),CBT(50),CB(50),CD(90),ADAL(30,3),DUL(5),DULZ(5),
     *		U(4,90),W(4,90),V(4,240),C(4,240),S(4,240),
     *		UVC(4,96),UVS(4,96),
     *		WC(4,96),WS(4,96),
     *		ADFI(4,24),PFU(4,60),
     *		A(4,220),B(4,220),G(4,20),
     *		UTT(3),VTT(3),UT(3),VT(3),VTTH(3),
     *		IARW(2000,9),RWW(2000,4),MAXS(9),
     *		DA123(3,4),DANU(3,4),UWW(3),UCOF(3,4),VCOF(3,4)
	CHARACTER BIT(2000),BIW(2000),SAT(20)
	DATA DULZ/481267.8812772222D0,477198.8673980555D0,
     *		35999.050340D0,483202.0175380555D0,
     *		445267.111480D0/
C
	DO 1731 I=1,5
 1731		DUL(I)=1.7453292519943296D-2*DULZ(I)/(36525.D0*86400.D0)
C
	open(unit=17,file='ctac.prt',status='unknown')
C
	PRINT *,'programm  CTAC  -> to construct a Theory'
	write(17,*) 'programm  CTAC  -> to construct a Theory'
	RMINZ=5.D-8
	RMINL=5.D-8
	RUMIN=2.D-8
	RWMIN=1.D-22
C
	CALL PCMCTAC(SAT,CC,ADAL,TEP,UTT,VTT,UT,VT,VTTH,
     *			DELTA,SPUM,SPUS,SPUK,TBEG,TEND)
C
c
	CALL PCMWRT(SAT,CC,ADAL,TEP,UT,VT,DELTA,SPUM,SPUS,SPUK)
c
	QAR=CC(8)/CC(2)
	IF (QAR.LT.5.D0) GO TO 67
		RMINZ=1.D-9
		RMINL=1.D-9
		RUMIN=5.D-7
		RWMIN=1.D-22
   67	CONTINUE
C
	MAXTH=5
	ITHEOR=0
  167	ITHEOR=ITHEOR+1
C
c
	write(17,*) 'iteration',ITHEOR
c
	DO 99 K=1,4
		DO 99 I=1,240
			V(K,I)=0.D0
        	        IF (I.LE.90) W(K,I)=0.D0
      			IF (I.LE.90) U(K,I)=0.D0
			IF (I.LE.60) PFU(K,I)=0.D0
			IF (I.LE.24) ADFI(K,I)=0.D0
   99	CONTINUE
C
	print *,'iteration',ITHEOR
	PRINT *,' computation of massives'
	CALL KURAP(CC,ADAL,U)
C
	CALL KSINP(CC,ADAL,W)
C
	CALL KETAP(CC,ADAL,V)
C
	CALL CSMWP(CC,ADAL,C,S)
C
	CALL PUFIP(CC,ADAL,W,V,PFU)
C
	CALL AFUZP(CC,ADAL,ADFI)
C
	OPEN(UNIT=15,FILE='CTAC.DAT',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	OPEN(UNIT=16,FILE='CTAC.SEQ',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	PRINT *,' Perturbations due to zonal Harmonics'
	if (ITHEOR.eq.MAXTH)
     *	WRITE(17,*) ' Perturbations due to zonal Harmonics'
	CALL PCMZON(CC,ADFI,PFU,RMINZ,U,V,UVC,A,B,G)
C
	PRINT *,' Perturbations due to tesseral and sectorial Harmonics'
	if (ITHEOR.eq.MAXTH)
     *	WRITE(17,*)
     *	   'Perturbations due to tesseral and sectorial Harmonics'
	CALL PCMTES(CC,ADFI,PFU,RMINZ,
     *		U,V,C,S,UVC,UVS,WC,WS,A,B,G)
C
	PRINT *,' Perturbations due to  Moon , Sun , Tides'
	if (ITHEOR.eq.MAXTH)
     *	WRITE(17,*) ' Perturbations due to  Moon , Sun , Tides'
	OPEN(UNIT=14,FILE='LUST.PGM',STATUS='OLD',ERR=5213)
	GO TO 5214
 5213	PRINT *,'no File LUST.PGM'
	GO TO 5215
C
 5214	CONTINUE
C
	CDEL=1.D0
	CALL PCMLUS(CC,ADFI,PFU,RMINL,CDEL,
     *			U,W,V,C,S,UVC,WC,WS,A,B,G)
C
	CLOSE(UNIT=14)
C
 5215	CONTINUE
C
	IF (QAR.GT.1.D0) GO TO 35215
C
	PRINT *,' Perturbations due to add Tides'
	WRITE(17,*) ' Perturbations due to add Tides'
	OPEN(UNIT=14,FILE='TITU.PGM',STATUS='OLD',ERR=15213)
	GO TO 15214
15213	CONTINUE
C	PRINT *,'no File TITU.PGM'
	GO TO 15215
C
15214	CONTINUE
C
	CDEL=1.D0
	CALL PCMLUS(CC,ADFI,PFU,RMINL,CDEL,
     *			U,W,V,C,S,UVC,WC,WS,A,B,G)
C
	CLOSE(UNIT=14)
C
15215	CONTINUE
C
	PRINT *,' Perturbations due to  ocean Tides'
	WRITE(17,*) ' Perturbations due to  ocean Tides'
	OPEN(UNIT=14,FILE='TIOC.PGM',STATUS='OLD',ERR=35213)
	GO TO 35214
35213	CONTINUE
C	PRINT *,'no File TIOC.PGM'
	GO TO 35215
C
35214	CONTINUE
C
	CDEL=1.D0
	CALL PCMLUS(CC,ADFI,PFU,RMINL,CDEL,
     *			U,W,V,C,S,UVC,WC,WS,A,B,G)
C
	CLOSE(UNIT=14)
C
35215	CONTINUE
C
	PRINT *,' Perturbations due to inercial Forces'
	if (ITHEOR.eq.MAXTH)
     *	WRITE(17,*) ' Perturbations due to inercial Forces'
	CALL PCMNUT(CC,ADAL,DUL)
C
	CLOSE(UNIT=15)
	CLOSE(UNIT=16)
C
	OPEN(UNIT=14,FILE='SHADOW.PGM',STATUS='OLD',ERR=55213)
	GO TO 55214
55213	PRINT *,'no File SHADOW.PGM'
	GO TO 55215
55214	CONTINUE
C
	OPEN(UNIT=15,FILE='CTACPR.DAT',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	OPEN(UNIT=16,FILE='CTACPR.SEQ',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	PRINT *,' Perturbations due to  Solar Pressure'
	if (ITHEOR.eq.MAXTH)
     *	WRITE(17,*) ' Perturbations due to  Solar Pressure'
	CALL PCMLUS(CC,ADFI,PFU,RMINL,DELTA,
     *			U,W,V,C,S,UVC,WC,WS,A,B,G)
C
	CLOSE(UNIT=14)
	CLOSE(UNIT=15)
	CLOSE(UNIT=16)
C
55215	CONTINUE
C
	IF (ITHEOR.eq.MAXTH) GO TO 55167
C
	CALL PCMELM(CC,ADAL,CD,DA123,TEP,UTT,VTT,UT,VT,VTTH,
     *			IARW,RWW,BIW)
c
	CALL PCMWRT(SAT,CC,ADAL,TEP,UT,VT,DELTA,SPUM,SPUS,SPUK)
c
	IF (ITHEOR.LT.MAXTH) GO TO 167
C
55167	CONTINUE
C
	OPEN(UNIT=11,FILE='CTAC.DAT',
     *		STATUS='OLD',FORM='UNFORMATTED')
	OPEN(UNIT=13,FILE='CTACTH.DAT',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	CALL PCMORD(RUMIN,NTERM,IARW,RWW,BIT,BIW)
	PRINT 1,NTERM,RUMIN
	write(17,1) nterm,rumin
C
	CLOSE(UNIT=11,STATUS='DELETE')
	CLOSE(UNIT=13)
C
	OPEN(UNIT=11,FILE='CTAC.SEQ',
     *		STATUS='OLD',FORM='UNFORMATTED')
	OPEN(UNIT=13,FILE='CTACTH.SEQ',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
C
	CALL PCMORD(RWMIN,NTERM,IARW,RWW,BIT,BIW)
	PRINT 2,NTERM,RWMIN
	write(17,2) nterm,rwmin
C
	CLOSE(UNIT=11,STATUS='DELETE')
	CLOSE(UNIT=13)
C
    1	FORMAT(1X,'  now are ',I6,'  short periodic terms',
     *		1X,'  limitation is',1PE11.2)
    2	FORMAT(1X,'  now are ',I6,'   long periodic terms',
     *		1X,'  limitation is',1PE11.2)
C
	CALL PCMWRT(SAT,CC,ADAL,TEP,UT,VT,DELTA,SPUM,SPUS,SPUK)
C
	OPEN(UNIT=13,FILE='CTACINIT.DAT',
     *		STATUS='OLD',FORM='UNFORMATTED')
	DO 11 J=1,50
   11		READ(13) CBT(J)
	READ(13) TEP,ANOB,AOR,AUR,AMR,AMM
	DO 12 I=1,30
   12		READ(13) (ADAL(I,J),J=1,3)
	READ (13) DELTAT,SPUM,SPUS,SPUK
	READ(13) ITER
	DO 3422 J=1,50
 3422		CB(J)=CBT(J)
	DELTAE=DELTAT
	IF (ITER.EQ.0) GO TO 3121
	DO 3421 J=1,50
 3421		READ(13) CB(J)
	READ(13) TEP,ANOB,AOR,AUR,AMR,AMM
	READ (13) DELTAE,SPUM,SPUS,SPUK
 3121	CLOSE(UNIT=13)
C
	PRINT 154,TBEG,TEND
	WRITE(17,54) TBEG,TEND
   54	FORMAT(1X,' integration  from',F10.2,2X,'to',F10.2)
  154	FORMAT(1X,' integration  from',F10.2,2X,'to',F10.2,/)
C
	CALL PURTUV(TEP,AOR,AUR,AMR,AMM,CB,CBT,C,ADAL,
     *				UWW,DA123,DANU,UCOF,VCOF,
     *				IARW,RWW,BIW,MAXS,
     *				DELTAT,DELTAE,TBEG,TEND)
C
C approximation from TBEG to TEND   TAPX step of approximation in day
C
	QAN=1.D3/ANOB
c	QAN=0.5D0*QAN
	QRN=QAN-DMOD(QAN,1.D0)
	TAPX=1.D-3*QRN
C
	PRINT 254,TBEG,TEND,TAPX
	WRITE(17,254) TBEG,TEND,TAPX
  254	FORMAT(1X,'approximation from',F10.2,2X,'to',F10.2,
     *		'  step',F8.5)
C
	CALL PURSAX(CBT,CB,ADAL,UWW,DA123,
     *				IARW,RWW,BIW,MAXS,
     *				UCOF,VCOF,TBEG,TEND,TAPX)
c
	open(unit=13,file='CTACPR.DAT',err=81,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   81	open(unit=13,file='CTACPR.SEQ',err=82,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   82	open(unit=13,file='CTACTH.DAT',err=83,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   83	open(unit=13,file='CTACTH.SEQ',err=84,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   84	open(unit=13,file='CTACINIT.DAT',err=85,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   85	open(unit=13,file='CTACL.TUV',err=86,
     *		status='old',form='unformatted')
	close(unit=13,status='delete')
   86	continue
c
	print 2092
	write(17,2092)
	close(unit=17)
c
 2092	format(1x,//,1x,'information is now in files EFEMS .dat .stp')
	END
C
	SUBROUTINE PURSAX(CBT,CB,ADAL,W,DA123,
     *				IARG,AMP,BCS,MAXS,
     *				UCOF,VCOF,TBEG,TEND,TAPX)
	IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
	DIMENSION CBT(50),CB(50),IARG(2000,9),AMP(2000,4),MAXS(9),
     *		APEIL(6,13),POLC(13),EILELM(6),DV(3),YY(4),EL(3),
     *		DA123(3,4),W(3),UT(3),VT(3),UCOF(3,4),VCOF(3,4),
     *		DDU(3),DDL(3),UTT(3),VTT(3),TTEST(4),TEIL(6),DEL(6)
	CHARACTER BCS(2000)
	DATA PI22/6.283185307179586D0/
	DATA TTEST/-0.9D0,-0.3D0,+0.1D0,+0.6D0/
C
	PI90=0.25D0*PI22
	RG=360.D0/PI22
	RADGRA=RG
	SECRAD=4.848136811053599D-6
	RADSEC=206264.8062470936D0
	FREZ=0.7292115D-4
c
	IENDF=0
	NTERMT=0
	DELAMP=1.D0
c
	CALL AMPFUT(DELAMP,NTERMT,NTERMW,IARG,AMP,BCS,MAXS,IENDF)
c
	write(17,*) 'number of the short periodic terms',NTERMW
	print *,'number of the short periodic terms',NTERMW
c
	MPOL=12
	NPOL=MPOL+1
	NN=NPOL+1
	RN=1.D0/NPOL
	PRN=0.5D0*PI22*RN
C
	OPEN(UNIT=13,FILE='EFEMS.STP',STATUS='UNKNOWN',
     *		FORM='FORMATTED')
	WRITE(13,754) MPOL,NPOL,TBEG,TAPX
  754	FORMAT(5X,I5,/,5X,I5,/,1X,F15.5,/,1X,F15.5)
	CLOSE(UNIT=13)
C
	OPEN(UNIT=13,FILE='EFEMS.DAT',STATUS='UNKNOWN',
     *		FORM='FORMATTED')
C
	OPEN(UNIT=14,FILE='CTACL.TUV',
     *		STATUS='OLD',FORM='UNFORMATTED')
C
	READ(14) TN,TK
	READ(14) UCOF
	READ(14) VCOF
C
	ITEST=0
	TSN=TBEG-TAPX+1.D-8
C
		DO 17177 IAPX=1,1000
C
	TSN=TSN+TAPX
	TSK=TSN+TAPX
C
	QT=TSN+1.D-2
	IF (QT.GT.TEND) GO TO 17
C
C TRY OF THE APPROXIMATION
C
	DO 41 J=1,6
		DO 41 I=1,13
   41			APEIL(J,I)=0.D0
C
	SX=0.5D0*(TSN+TSK)
	TM=0.5D0*(TSK-TSN)
	DO 42 IPOL=1,NN
		J=NN-IPOL
		XUZ=DCOS(J*PRN)
		TUZ=SX+TM*XUZ
		CALL CLAP(MPOL,XUZ,POLC)
C
	IF ((TUZ.GE.TN).AND.(TUZ.LE.TK)) GO TO 17220
		READ(14,END=17) TN,TK
		READ(14) UCOF
		READ(14) VCOF
17220	CONTINUE
C
	CALL INTPOL(TN,UCOF,VCOF,TUZ,UT,VT)
C
	CALL CAHORT(CBT,ADAL,DA123,W,
     *		NTERMW,IARG,AMP,BCS,MAXS,TUZ,UT,VT,DDU,DDL)
C
	DO 88 I=1,3
		VTT(I)=VT(I)+DDL(I)
		UTT(I)=UT(I)+DDU(I)
   88		DV(I)=VTT(I)-W(I)
c
	CALL CARTER(DV,YY)
	CALL CARTOT(YY,DA123,EL)
c
c EL => in km and s
c
	CB(5)=EL(1)
	CB(6)=EL(2)
	CB(7)=EL(3)
	CALL ALEI(CB)
	CALL CRONA(CB)
	AB=CB(8)
	AE=CB(9)
	AS=CB(10)
	AC=CB(11)
	AIR=DATAN2(AS,AC)
c
	EILELM(1)=AB
	EILELM(2)=AE
	EILELM(3)=AIR
	EILELM(4)=UTT(3)+PI90
	EILELM(5)=UTT(2)-PI90
	EILELM(6)=UTT(1)
C
		Q=2.D0
		IF ((IPOL.EQ.1).OR.(IPOL.EQ.NN)) Q=1.D0
		DO 43 JC=1,6
			DO 43 IC=1,NPOL
C
	APEIL(JC,IC)=APEIL(JC,IC)+Q*EILELM(JC)*POLC(IC)
C
   43		CONTINUE
C
   42	CONTINUE
C
	DO 49 IC=1,NPOL
		Q=RN
		IF (IC.EQ.1) Q=0.5D0*RN
		DO 49 JC=1,6
   49			APEIL(JC,IC)=Q*APEIL(JC,IC)
C
	DO 15 JC=1,6
		DO 15 IC=1,NPOL
   15			WRITE(13,354) APEIL(JC,IC)
C
  354	FORMAT(1PE22.15)
C
C TEST FOR THE APPROXIMATION
C
		IF (ITEST.NE.0) GO TO 821
C
	print *,'Test for Approximation'
	write(17,*) 'Test for Approximation'
	PRINT 824
	WRITE(17,824)
	ITEC=0
	DO 822 ITT=1,4
		ITEC=ITEC+1
		TTEC=SX+TM*TTEST(ITEC)
		CALL CLCHEL(MPOL,TSN,TSK,APEIL,TTEC,TEIL)
		CALL INTPOL(TN,UCOF,VCOF,TTEC,UT,VT)
C
	CALL CAHORT(CBT,ADAL,DA123,W,
     *		NTERMW,IARG,AMP,BCS,MAXS,TTEC,UT,VT,DDU,DDL)
C
	DO 188 I=1,3
		VTT(I)=VT(I)+DDL(I)
		UTT(I)=UT(I)+DDU(I)
  188		DV(I)=VTT(I)-W(I)
c
	CALL CARTER(DV,YY)
	CALL CARTOT(YY,DA123,EL)
c
c EL => in km and s
c
	CB(5)=EL(1)
	CB(6)=EL(2)
	CB(7)=EL(3)
	CALL ALEI(CB)
	CALL CRONA(CB)
	AB=CB(8)
	AE=CB(9)
	AS=CB(10)
	AC=CB(11)
	AIR=DATAN2(AS,AC)
c
	EILELM(1)=AB
	EILELM(2)=AE
	EILELM(3)=AIR
	EILELM(4)=UTT(3)+PI90
	EILELM(5)=UTT(2)-PI90
	EILELM(6)=UTT(1)
C
		DO 823 J=1,6
  823			DEL(J)=EILELM(J)-TEIL(J)
		PRINT 5112,ITEC,TTEST(ITEC),(DEL(J),J=1,6)
		WRITE(17,5112) ITEC,TTEST(ITEC),(DEL(J),J=1,6)
  822	CONTINUE
	PRINT 2040
C
  821	ITEST=1
	PRINT 2091,TSN,TSK
 5112	FORMAT(1X,I1,F6.1,2X,1P,3E11.3,2X,3E11.3)
  824	FORMAT(1X,'  test   ',6X,'da   ',6X,'de   ',6X,'di   ',
     *		8X,'dh  ',6X,'dg   ',6X,'dl   ')
 2040	FORMAT(1X,/,1X)
 2091	FORMAT(1H+,'approximation from',F10.2,2X,'to',F10.2)
C
17177		CONTINUE
c
   17	CONTINUE
c
	CLOSE(UNIT=13)
	CLOSE(UNIT=14)
C
	RETURN
	END
C
	SUBROUTINE CLAP(M,X,P)
	IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
	DIMENSION P(13)
	N=M+1
	P(1)=1.D0
	P(2)=X
	DO 1 I=3,N
		I1=I-1
		I2=I-2
    1		P(I)=2.D0*X*P(I1)-P(I2)
	RETURN
	END
C
	SUBROUTINE CLCHEL(M,TN,TK,AL,T,DL)
	IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
	DIMENSION AL(6,13),P(13),DL(6)
	N=M+1
	SX=0.5D0*(TN+TK)
	TM=0.5D0*(TK-TN)
	X=(T-SX)/TM
	CALL CLAP(M,X,P)
	DO 1 J=1,6
		DL(J)=0.D0
		DO 1 I=1,N
    1			DL(J)=DL(J)+AL(J,I)*P(I)
	RETURN
	END
C
	SUBROUTINE PURTUV(TEP,AOR,AUR,AMR,AMM,CB,CBT,C,ADAL,
     *				W,DA123,DANU,UCOF,VCOF,
     *				IARG,AMP,BCS,MAXS,
     *				DELTAT,DELTAE,TBEG,TEND)
	IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
	DIMENSION CB(50),CBT(50),C(90),ADAL(30,3),
     *		ROM(20,20),RMP(20,20),MRS(20),
     *		IARG(2000,9),AMP(2000,4),MAXS(9),
     *		DANU(3,4),DAB(3,4),DA123(3,4),
     *		UN(3),VN(3),W(3),UK(3),VK(3),
     *		U2(3),U3(3),V2(3),V3(3),TT1(4),
     *		UCOF(3,4),VCOF(3,4)
	INTEGER*4 MT
	CHARACTER BCS(2000)
	DATA PI22/6.283185307179586D0/
C
	MT=0
C
	PI90=0.25D0*PI22
	RG=360.D0/PI22
	RADGRA=RG
	SECRAD=4.848136811053599D-6
	RADSEC=206264.8062470936D0
C
	ND=4
	FM=CBT(1)
	RZ=CBT(2)
	CJ2=CBT(3)
	SIG=CBT(4)
	DO 9112 I=1,4
 9112		C(I)=CBT(I)
C
	AR1=CBT(5)
	AR2=CBT(6)
	AR3=CBT(7)
C
	CALL EMELD(C,AR1,AR2,AR3,EDL,EDG,EDH)
C
	W(1)=EDL
	W(2)=EDG
	W(3)=EDH
C
C for Value W(1..3) the Theory is constructed
C
	DAB(1,1)=CBT(8)
	DAB(2,1)=CBT(9)
	DAB(3,1)=CBT(10)
	DA123(1,1)=CBT(5)
	DA123(2,1)=CBT(6)
	DA123(3,1)=CBT(7)
	DA123(3,2)=0.D0
	DA123(3,3)=0.D0
	DA123(3,4)=1.D0
	DANU(1,1)=CBT(42)
	DANU(2,1)=CBT(43)
	DANU(3,1)=CBT(44)
	R1=1.D0/(1.D0-CBT(40))
	DO 421 K=2,4
		K1=K-1
		DAB(1,K)=ADAL(3,K1)
		DAB(2,K)=ADAL(4,K1)
		DAB(3,K)=ADAL(5,K1)
		DA123(1,K)=2.D0*ADAL(1,K1)
		DA123(2,K)=-ADAL(2,K1)
		DANU(1,K)=R1*ADAL(22,K1)+CBT(42)*R1*ADAL(28,K1)
		DANU(2,K)=CBT(45)*DANU(1,K)+CBT(42)*ADAL(23,K1)
  421		DANU(3,K)=CBT(46)*DANU(1,K)+CBT(42)*ADAL(24,K1)
C
C interpolation for secular terms with the step <= 15 day
C
	NINT=4
	MINT=4
	EPSINT=1.D-10
	DO 451 I=1,20
		MRS(I)=0
		DO 451 J=1,20
			ROM(I,J)=0.D0
  451			RMP(I,J)=0.D0
C
	STEP25=6.D0
	DH25=STEP25
	STEP=2.D0
	DH=STEP
	TT1(1)=0.D0
	TT1(2)=STEP
	TT1(3)=2.D0*STEP
	TT1(4)=3.D0*STEP
	DO 456 I=1,4
		T2=TT1(I)**2
		T3=T2*TT1(I)
		ROM(I,1)=1.D0
		ROM(I,2)=TT1(I)
		ROM(I,3)=T2
  456		ROM(I,4)=T3
C
	CALL PSEU(ROM,NINT,MINT,EPSINT,IRANK,MRS,RMP)
C
C THIS A1 A2 A3 => FOR ADJUST
C
	A1=CB(5)
	A2=CB(6)
	A3=CB(7)
C
	CALL EMELD(C,A1,A2,A3,EDL,EDG,EDH)
C
	UL0=AMR
	UG0=AOR+PI90
	UH0=AUR-PI90
	UDL=UL0
	UDG=UG0
	UDH=UH0
C
	TK=TEP
	TN=TK
	UK(1)=UDL
	UK(2)=UDG
	UK(3)=UDH
	VK(1)=EDL
	VK(2)=EDG
	VK(3)=EDH
C
C TK UK(1..3) and VK(1..3) is initial Value for Numeric Integration
C
	DELAMP=DELTAE/DELTAT
	CALL AMPFUL(DELAMP,NTERM,IARG,AMP,BCS,MAXS)
	IF (NTERM.EQ.0) RETURN
C
		DTB=TBEG-TEP
		IF (DABS(DTB).GT.1.D4)
     *			STOP  'too long Interval for Prognos'
		IF (DTB.LT.0.D0) GO TO 7963
		IF (DTB.GT.STEP25) GO TO 7965
		GO TO 7967
 7963		STEPT=-STEP25
		DHT=-DH25
		GO TO 7969
 7965		STEPT=STEP25
		DHT=DH25
C
 7969		CONTINUE
C
C the Runge-Kutta Method for Integration
C
		PRINT 33055,TK
		CALL INTRKP(MT,TN,UN,VN,W,DHT,TK,UK,VK,
     *				DANU,NTERM,IARG,AMP,BCS,MAXS)
		DTB=TBEG-TK
		IF ((DTB.LT.0.D0).OR.(DTB.GT.STEP25)) GO TO 7969
C
 7967		DHT=DTB
		CALL INTRKP(MT,TN,UN,VN,W,DHT,TK,UK,VK,
     *				DANU,NTERM,IARG,AMP,BCS,MAXS)
C
C Epoch is now at the Begin Point
C
	PRINT 2041
C
		TSQ=(TK-TEP)**2
C
		TEP=TK
		TN=TK
		TLN=TK
		TLK=TK
		TTK=TEP
		TTN=TTK
		UL0=DMOD(UK(1),PI22)+PI22*AMM*TSQ
		UG0=DMOD(UK(2),PI22)
		UH0=DMOD(UK(3),PI22)
		IF (UL0.LT.0.D0) UL0=UL0+PI22
		IF (UG0.LT.0.D0) UG0=UG0+PI22
		IF (UH0.LT.0.D0) UH0=UH0+PI22
		UK(1)=UL0
		UK(2)=UG0
		UK(3)=UH0
		EDL=VK(1)
		EDG=VK(2)
		EDH=VK(3)
C
C TK UK(1..3) and VK(1..3) is initial Value for Numeric Integration
C
	OPEN(UNIT=14,FILE='CTACL.TUV',
     *		STATUS='UNKNOWN',FORM='UNFORMATTED')
c	PRINT 2040
 2040	FORMAT(1X)
 2041	FORMAT(1H+,'                                             ',
     *		'                        ')
C
12021 CONTINUE
C
C the Runge-Kutta Method for Integration
C
	IF (INDINT.EQ.0) PRINT 13055,TK
	IF (INDINT.NE.0) PRINT 33055,TK
	INDINT=1
C
	CALL INTRKP(MT,TN,UN,VN,W,DH,TK,UK,VK,
     *				DANU,NTERM,IARG,AMP,BCS,MAXS)
C
	PRINT 33055,TK
	CALL INTRKP(MT,T2,U2,V2,W,DH,TK,UK,VK,
     *				DANU,NTERM,IARG,AMP,BCS,MAXS)
C
	PRINT 33055,TK
	CALL INTRKP(MT,T3,U3,V3,W,DH,TK,UK,VK,
     *				DANU,NTERM,IARG,AMP,BCS,MAXS)
C
13055	FORMAT(1H+,'please wait, numeric Integration for T=',F10.2)
C
33055	FORMAT(1H+,'please wait, numeric Integration for T=',F10.2,
     *			'                   ')
C
	CALL INTCOF(RMP,UN,U2,U3,UK,VN,V2,V3,VK,UCOF,VCOF)
C
	WRITE(14) TN,TK
	WRITE(14) UCOF
	WRITE(14) VCOF
C
	IF (TEND.GT.TK) GO TO 12021
C
	PRINT 2041
	CLOSE(UNIT=14)
C
	RETURN
	END
C
	SUBROUTINE AMPFUL(DEL,NTERM,IARG,AMP,BCS,MAXS)
	IMPLICIT REAL*8(A-H,O-Z),INTEGER*2(I-N)
	DIMENSION MAXS(9),IA(9),A(4),AMP(2000,4),IARG(2000,9)
	CHARACTER BOT,BCS(2000)
C
	NTERM=0
C
	DO 81421 I=1,9
81421		MAXS(I)=0
C
	OPEN(UNIT=12,FILE='CTACTH.SEQ',STATUS='OLD',
     *		ERR=141,FORM='UNFORMATTED')
C
	J=0
  991	READ(12,END=992) (IA(K),K=1,9),(A(K),K=1,4),BOT
	J=J+1
	IF (J.GT.2000) PRINT *,'number of Terms >2000'
	IF (J.GT.2000) GO TO 992
	DO 993 K=1,9
		IF (IABS(IA(K)).GT.MAXS(K)) MAXS(K)=IABS(IA(K))
  993		IARG(J,K)=IA(K)
	DO 994 K=1,4
  994		AMP(J,K)=A(K)
    	BCS(J)=BOT
C
	GO TO 991
C
  992	CLOSE(UNIT=12)
C
	IF (J.GT.2000) J=2000
	NTERMS=J
	NTERM=J
C
	OPEN(UNIT=12,FILE='CTACPR.SEQ',STATUS='OLD',
     *		ERR=141,FORM='UNFORMATTED')
C
	JSH=0
 3991	READ(12,END=3992) (IA(K),K=1,9),(A(K),K=1,4),BOT
	J=J+1
	JSH=JSH+1
	IF (J.GT.2000) PRINT *,'number of Terms >2000'
	IF (J.GT.2000) GO TO 3992
	DO 3993 K=1,9
		IF (IABS(IA(K)).GT.MAXS(K)) MAXS(K)=IABS(IA(K))
 3993		IARG(J,K)=IA(K)
	DO 3994 K=1,4
 3994		AMP(J,K)=DEL*A(K)
    	BCS(J)=BOT
C
	GO TO 3991
C
 3992	CLOSE(UNIT=12)
C
	IF (J.GT.2000) J=2000
	NTERSH=JSH
	NTERM=J
C
  141	RETURN
	END