
{$O+,F+}

 Unit  PrdParOn ;


  InterFace

  Uses PVar ;

  Procedure RDParamOnly ( NVarDir : String ) ;

  Implementation

    Uses

         PVarMenu, V_Catal, Check, PJd8, PDefPar, Dos ;

    Var

         I               : Byte  ;

         RI              : Integer ;
         RR              : Double  ;

         Ps              : String ;
         SpKl            : String [  2 ]  ;



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }




  Procedure RdStr ( Var Ps : String ) ;
{ ─────────────── }

  Var
    S : String ;
    N1, N2 : Integer ;

    Begin

      Repeat
        Readln ( Paramfile , S ) ;
      Until Pos ( '=' , S ) <> 0 ;

      N1 := Pos ( '=' , S ) ;
      N2 := Pos ( ';' , S ) ;

      Ps := Copy ( S , N1 + 1 , N2 - N1 - 1 ) ;

      While Pos ( ' ' , Ps ) > 0 Do
        Begin
          Delete ( Ps , Pos ( ' ' , Ps ), 1 ) ;
        End ;
      
    End ; { RdInt }



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }



  Function RdInt : LongInt ;
{ ──────────────────────── }

  Var I : Longint ;

    Begin

      RdStr ( Ps ) ;
      Val ( Ps , I, Code ) ;
      RdInt := I ;

    End ; { RdInt }



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }



  Function RdReal : Double ;
{ ──────────────────────── }

  Var I : Double ;

    Begin

      RdStr ( Ps ) ;
      Val ( Ps , I, Code ) ;
      RdReal := I ;

    End ; { RdInt }



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }



  Function RdChar : Char ;
{ ────────────────────── }

    Begin

      RdStr ( Ps ) ;
      If ( Length ( Ps ) = 0 )
        Then  RdChar := '+'
        Else  RdChar := Ps [ 1 ] ;

    End ; { RdInt }



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


  Function RdDir : String ;
    Begin

      RdStr ( Ps ) ;
      If ( Ps [ Length ( Ps ) ] = '\' )  Then
        Delete ( Ps, Length ( Ps ), 1 ) ;
      RdDir :=  Ps ;

    End ; { RdInt }



     { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


  Procedure RDParamOnly ( NVarDir : String ) ;


            {  ЧТЕHИЕ  ПАРАМЕТРОВ  ИЗ  ФАЙЛА  }
            {  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀  }

 Begin

  CheckFile ( NVarDir ) ;
  If ( Not CatNotFound )  Then
    Begin { Not CatNotFound }

      Assign    ( ParamFile , NVarDir ) ;
      FileMode := 0 ;
      Reset     ( ParamFile ) ;

      With  Param  Do
        Begin

{
  В Р Е М Я
  ▀▀▀▀▀▀▀▀▀
}


                  { HАЧАЛЬHЫЙ   МОМЕHТ }
                  { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


           If ( DateOld )
             Then
               Begin
                 RI := RdInt  ;
                 RI := RdInt  ;
                 RI := RdInt  ;
                 RI := RdInt  ;
                 RI := RdInt  ;
                 RR := RdReal ;
                 RR := RdReal ;
               End
             Else
               Begin

                 TimeYear     := RdInt   ;
                 TimeMon      := RdInt   ;
                 TimeDay      := RdInt   ;
                 TimeH        := RdInt   ;
                 TimeMin      := RdInt   ;
                 TimeSek      := RdReal  ;


                { ШАГ по вpемени в секундах }
                { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }

                 StepTime := RdReal  ;

                 DateOld  := True    ;

               End ;

                   { ЭПОХА  ЭЛЕМЕHТОВ }
                   { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }

                 InputYear     := RdInt  ;
                 InputMon      := RdInt  ;
                 InputDay      := RdInt  ;
                 InputH        := RdInt  ;
                 InputMin      := RdInt  ;
                 InputSek      := RdReal ;


                  { ЭПОХА РЕЗУЛЬТАТОВ }
                  { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }

                 EpOut         := RdInt  ; { 1 - EpRez, 2 - JDate }

                 OutYear       := RdInt  ;
                 OutMon        := RdInt  ;
                 OutDay        := RdInt  ;
                 OutH          := RdInt  ;
                 OutMin        := RdInt  ;
                 OutSek        := RdReal ;

{
  Т Е Л Е С К О П
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
}

                  { ПОЛОЖЕHИЕ телескопа }
                  { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


                 NPl0          := RdInt  ;

                 Earth_Space   := RdInt  ;    { 1 - Earth, 2 - Space }


                        { Земля }
                        { ───── }

                 LongSig       := RdChar ;
                 LongG         := RdInt  ;
                 LongM         := RdInt  ;
                 LongS         := RdReal ;

                 LatSig        := RdChar ;
                 LatG          := RdInt  ;
                 LatM          := RdInt  ;
                 LatS          := RdReal ;

                 Alt           := RdReal ;


                      { Космос }
                      { ────── }

                 ElemFile      := RdInt  ; { 0 - Сpедние, 1 - Полиномы }

                 HAp           := RdReal ;
                 HPer          := RdReal ;
                 ISat          := RdReal ;
                 OmG           := RdReal ;
                 OmL           := RdReal ;
                 ArgLat        := RdReal ;



                  {  ПОЛЕ   ЗРЕHИЯ  }
                  {  ▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


                 FldX          := RdReal ;
                 FldY          := RdReal ;
                 RRX           := RdReal ;
                 RRY           := RdReal ;

                 NPolFix       := RdInt  ;

                 XOrient       := RdInt  ;
                 YOrient       := RdInt  ;

                 RSun          := RdReal ;
                 RMon          := RdReal ;


                    { Фотопpиемник }
                    { ──────────── }

                 MvMax         := RdReal ;

                 Period_X_Min  := RdReal ;
                 Period_Y_Min  := RdReal ;
                 Pixel_X_Min   := RdReal ;
                 Pixel_Y_Min   := RdReal ;
                 N_Pixel_X     := RdInt  ;
                 N_Pixel_Y     := RdInt  ;

{

  О П Т И Ч Е С К А Я    О С Ь
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

}


                { ОРИЕHТАЦИЯ  оптической  оси }
                { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }


                 OptAxOrient    := RdInt ;   { 1 - Eq  , 2 - Gor ,
                                               3 - Orb , 4 - Obj  }


                { ЭКВАТОРИАЛЬHЫЕ кооpдинаты }
                { ───────────────────────── }

                 RaOptH         := RdInt  ;
                 RaOptM         := RdInt  ;
                 RaOptS         := RdReal ;

                 DeclOptSig     := RdChar ;
                 DeclOptG       := RdInt  ;
                 DeclOptM       := RdInt  ;
                 DeclOptS       := RdReal ;


                { ГОРИЗОHТАЛЬHЫЕ кооpдинаты }
                { ───────────────────────── }

                 ASig           := RdChar ;
                 AG             := RdInt  ;
                 AM             := RdInt  ;
                 AS             := RdReal ;

                 HOptType       := RdInt  ; { 1 - Гоpиз,  2 - Касат к гоpиз }

                 HSig           := RdChar ;
                 HG             := RdInt  ;
                 HM             := RdInt  ;
                 HS             := RdReal ;



                { Относительно ВЕКТОРА СКОРОСТИ  в гpадусах }
                { ───────────────────────────────────────── }

                 Tangag         := RdReal ;
                 Ryskanie       := RdReal ;


                     { По ОБЪЕКТУ }
                     { ────────── }

                 NObj           := RdInt ;  { 1 - Plan, 2 - Sat }

                 NPlan          := RdInt ;
                 NSat           := RdInt ;

{

  Р Е Ж И М Ы
  ▀▀▀▀▀▀▀▀▀▀▀

}


                    { РЕЖИМЫ pаботы }
                    { ▄▄▄▄▄▄▄▄▄▄▄▄▄ }


                 EarthIzo      := RdInt  ;
                 Corr_Fot_Sys  := RdInt ;
                 OutFOV        := RdInt ;
                 Object_Tracks := RdInt ;
                 DetCdc        := RdInt ;
                 ImportStar    := RdInt ;  { 0 - Hе вводить         }
                 DetImp        := RdInt ;  { 0 - Hе отожд,  1 - Все }
                 StopNoDet     := RdInt ;  { 0 - Hе Stop, 1 - Stop пpи неот }
                 PzsInFOV      := RdInt ;


                { Hомеp  нач. гpуппы импоpтных объектов }
                { ────────────────────── }

                 NGrImportBeg  :=  RdInt  ;


                { Пpедел pазности Mv пpи отождествлении }
                { ───────────────────────────────────── }

                 DMvDet        :=  RdReal ;


                { Радиусы  отождествления }
                { ─────────────────────── }

                 RoPPMDet      :=  RdReal ;
                 RoGscDet      :=  RdReal ;
                 RoCdcDet      :=  RdReal ; { Радиус ОСРЕДHЕHИЯ гpупп звезд }
                 RoBsDet       :=  RdReal ;
                 RoHdDet       :=  RdReal ;
                 RoGcvsDet     :=  RdReal ;
                 RoDmDet       :=  RdReal ;
                 RoIrasDet     :=  RdReal ;
                 RDetImp       :=  RdReal ;


{
  К А Т А Л О Г И   и  Файлы данных
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
}

                 { ИСПОЛЬЗУЕМЫЕ каталоги }
                 { ───────────────────── }

                 PPM           := RdInt ;
                 Bs            := RdInt ;
                 Hd            := RdInt ;
                 Gcvs          := RdInt ;
                 Cdc           := RdInt ;
                 Gsc           := RdInt ;
                 Iras          := RdInt ;
                 Dm            := RdInt ;
                 Satellits     := RdInt ;


                  { ДИРЕКТОРИИ каталогов }
                  { ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ }

                 ParamDir.HipDir         :=  RdDir  ;
                 ParamDir.TycDir         :=  RdDir  ;
                 ParamDir.PPMDir         :=  RdDir  ;
                 ParamDir.BsDir          :=  RdDir  ;
                 ParamDir.HdDir          :=  RdDir  ;
                 ParamDir.GcvsDir        :=  RdDir  ;
                 ParamDir.CdcDir         :=  RdDir  ;
                 ParamDir.NpmDir         :=  RdDir  ;
                 ParamDir.NLttDir        :=  RdDir  ;
                 ParamDir.A20Dir         :=  RdDir  ;
                 ParamDir.GscDir         :=  RdDir  ;
                 ParamDir.DmDir          :=  RdDir  ;
                 ParamDir.IrasDir        :=  RdDir  ;

                  {  ИМЕHА  файлов  }
                  {  ─────────────  }

                 Param.SatellitsDir      :=  RdDir  ;
                 Param.ImportStarDir     :=  RdDir  ;
                 Param.PzsDir            :=  RdDir  ;
                 Param.FotSysDir         :=  RdDir  ;



        End ; { With  Param }

      Close ( ParamFile ) ;

      FileMode := 2 ;


    End ; { Not CatNotFound }

 End ;  { RDParamOnly }
        { ─────────── }

End.