 UNIT PFK4FK5 ;

 INTERFACE

      PROCEDURE  FK4FK5 ( Ind :Integer;
                          Var Par, Ra, Decl, Vr, Pmra, Pmdecl : Double) ;


 IMPLEMENTATION

      PROCEDURE  FK4FK5 ( Ind :Integer;
                          Var Par, Ra, Decl, Vr, Pmra, Pmdecl : Double) ;

{**

     Conversion of stellar position and proper motion from the
     ---------------------------------------------------------
        standart  epoch B1950.0 to J2000.0 and vice versa.
        -------------------------------------------------

     The Astronomical Almanac, 1989, p. B42 - B43.
     Standish E.M., (1982) Astron. Astrophys., v. 115, 20-22.

     Aoki,S., Soma,M., Kinoshita,H., Inoue,K., (1983),
     Astron. Astrophys., v. 128, 263-267.


                      Input parameters:
                      ----------------

    Set Ind = +1 for B1950.0 -> J2000   ,
    Set Ind = -1 for J2000   -> B1950.0 ,

    Par, Ra, Decl - parallax, right ascension, declination in radians,
    Vr            - radial velocity, in km/sec,
    Pmra, Pmdecl  - proper motions in right ascension, declination,
        in radian / tropical century (Ind = +1),
        in radian /  julian  century (Ind = -1).


                      Output parameters:
                      -----------------

    Par, Ra, Decl - parallax, right ascension, declination in radians,
    Vr            - radial velocity, in km/sec,
    Pmra, Pmdecl  - proper motions in right ascension, declination,
        in radian /  julian  century (Ind = +1),
        in radian / tropical century (Ind = -1).

** }


  Const

      sr   = 206264.80624709636      ;
      Pi2  =      6.283185307179586  ;

      ax   =     -1.62557e-6         ;
      ay   =     -0.31919e-6         ;
      az   =     -0.13843e-6         ;

      vax  =      1.244e-3           ;
      vay  =     -1.579e-3           ;
      vaz  =     -0.660e-3           ;

      P11  =      0.9999256782       ;
      P12  =     -0.0111820611       ;
      P13  =     -0.0048579477       ;
      P14  =      0.00000242395018   ;
      P15  =     -0.00000002710663   ;
      P16  =     -0.00000001177656   ;
      P21  =      0.0111820610       ;
      P22  =      0.9999374784       ;
      P23  =     -0.0000271765       ;
      P24  =      0.00000002710663   ;
      P25  =      0.00000242397878   ;
      P26  =     -0.00000000006587   ;
      P31  =      0.0048579479       ;
      P32  =     -0.0000271474       ;
      P33  =      0.9999881997       ;
      P34  =      0.00000001177656   ;
      P35  =     -0.00000000006582   ;
      P36  =      0.00000242410173   ;
      P41  =     -0.000551           ;
      P42  =     -0.238565           ;
      P43  =      0.435739           ;
      P44  =      0.99994704         ;
      P45  =     -0.01118251         ;
      P46  =     -0.00485767         ;
      P51  =      0.238514           ;
      P52  =     -0.002667           ;
      P53  =     -0.008541           ;
      P54  =      0.01118251         ;
      P55  =      0.99995883         ;
      P56  =     -0.00002718         ;
      P61  =     -0.435623           ;
      P62  =      0.012254           ;
      P63  =      0.002117           ;
      P64  =      0.00485767         ;
      P65  =     -0.00002714         ;
      P66  =      1.00000956         ;

      Q11  =      0.9999256795       ;
      Q12  =      0.0111814828       ;
      Q13  =      0.0048590039       ;
      Q14  =     -0.00000242389840   ;
      Q15  =     -0.00000002710544   ;
      Q16  =     -0.00000001177742   ;
      Q21  =     -0.0111814828       ;
      Q22  =      0.9999374849       ;
      Q23  =     -0.0000271771       ;
      Q24  =      0.00000002710544   ;
      Q25  =     -0.00000242392702   ;
      Q26  =      0.00000000006585   ;
      Q31  =     -0.0048590040       ;
      Q32  =     -0.0000271557       ;
      Q33  =      0.9999881946       ;
      Q34  =      0.00000001177742   ;
      Q35  =      0.00000000006585   ;
      Q36  =     -0.00000242404995   ;
      Q41  =     -0.000551           ;
      Q42  =      0.238509           ;
      Q43  =     -0.435614           ;
      Q44  =      0.99990432         ;
      Q45  =      0.01118145         ;
      Q46  =      0.00485852         ;
      Q51  =     -0.238560           ;
      Q52  =     -0.002667           ;
      Q53  =      0.012254           ;
      Q54  =     -0.01118145         ;
      Q55  =      0.99991613         ;
      Q56  =     -0.00002717         ;
      Q61  =      0.435730           ;
      Q62  =     -0.008541           ;
      Q63  =      0.002117           ;
      Q64  =     -0.00485852         ;
      Q65  =     -0.00002716         ;
      Q66  =      0.99996684         ;



  Var

      I                          : Integer ;

      Sa, Ca, Sd, Cd             : Double ;
      X, Y, Z, F, FF             : Double ;
      Vx, Vy, Vz                 : Double ;
      X1, Y1, Z1                 : Double ;
      Vx1, Vy1, Vz1              : Double ;


  Begin { F4FK5 }





   If(Ind = 1)  Then

    Begin  {  Conversion of stellar position and proper motion
              from the standart  epoch B1950.0 to J2000.0       }

      sa := sin(Ra) ;
      ca := cos(Ra) ;

      sd := sin(Decl) ;
      cd := cos(Decl) ;

      x := ca * cd ;
      y := sa * cd ;
      z := sd ;

      F := 21.095 * Vr * Par ;

      vx := (-pmra * y - pmdecl * ca * sd + F * x) * sr ;
      vy := ( pmra * x - pmdecl * sa * sd + F * y) * sr ;
      vz :=             (pmdecl * cd      + F * z) * sr ;

   { Remove the effects of the E-terms of aberration }
   { ----------------------------------------------- }

      F  := x * ax  + y * ay  + z * az + 1 ;
      FF := x * vax + y * vay + z * vaz    ;

      x1 := F * x - ax ;
      y1 := F * y - ay ;
      z1 := F * z - az ;

      vx1 := vx - vax + FF * x ;
      vy1 := vy - vay + FF * y ;
      vz1 := vz - vaz + FF * z ;

         {  B1950.0 > J2000  }
         {  ---------------  }

      x  := P14*vx1 + P15*vy1 + P16*vz1 + P11*x1 + P12*y1 + P13*z1 ;
      y  := P24*vx1 + P25*vy1 + P26*vz1 + P21*x1 + P22*y1 + P23*z1 ;
      z  := P34*vx1 + P35*vy1 + P36*vz1 + P31*x1 + P32*y1 + P33*z1 ;

      vx := P44*vx1 + P45*vy1 + P46*vz1 + P41*x1 + P42*y1 + P43*z1 ;
      vy := P54*vx1 + P55*vy1 + P56*vz1 + P51*x1 + P52*y1 + P53*z1 ;
      vz := P64*vx1 + P65*vy1 + P66*vz1 + P61*x1 + P62*y1 + P63*z1 ;

         { Convert to spherical coordinates }
         { -------------------------------- }

      sa := x * x + y * y ;
      ca := sa + z * z   ;

      sd := x * vx + y * vy ;
      cd := sqrt(sa) ;

      If ( sa = 0.0 ) Then
        Begin
          Pmra   := 0 ;
          Pmdecl := 0 ;
        End
       Else
        Begin
          Pmra   := (  x * vy - y * vx ) / ( sa *      sr ) ;
          Pmdecl := ( vz * sa - z * sd ) / ( ca * cd * sr ) ;
        End ;

      ca := sqrt(ca) ;

      If(Par <> 0) Then
        Vr := ( sd + z * vz ) / ( 21.095 * Par * sr * ca ) ;

      Par := Par/ca ;

      Ra  := ArcTan ( y / x ) ;
 	              IF ( x  < 0.0 )  THEN  Ra := Ra + Pi  ;
		      IF ( Ra < 0.0 )  THEN  Ra := Ra + Pi2 ;

      Decl := ArcTan ( z / cd ) ;

   End  { B1950 -> J2000 }

  Else

   Begin  { Ind = -1, conversion of stellar position and proper motion
                      from  the standart epoch J2000.0
                      to    the standart epoch B1950.0 }

      sa := sin(Ra) ;
      ca := cos(Ra) ;

      sd := sin(Decl) ;
      cd := cos(Decl) ;

      x := ca * cd ;
      y := sa * cd ;
      z := sd      ;

      F := 21.095 * Vr * Par ;

      vx := (-pmra * y - pmdecl * ca * sd + F * x) * sr ;
      vy := (pmra * x - pmdecl * sa * sd + F * y) * sr ;
      vz :=            (pmdecl * cd      + F * z) * sr ;

      x1  := Q14*vx + Q15*vy + Q16*vz + Q11*x + Q12*y + Q13*z ;
      y1  := Q24*vx + Q25*vy + Q26*vz + Q21*x + Q22*y + Q23*z ;
      z1  := Q34*vx + Q35*vy + Q36*vz + Q31*x + Q32*y + Q33*z ;

      vx1 := Q44*vx + Q45*vy + Q46*vz + Q41*x + Q42*y + Q43*z ;
      vy1 := Q54*vx + Q55*vy + Q56*vz + Q51*x + Q52*y + Q53*z ;
      vz1 := Q64*vx + Q65*vy + Q66*vz + Q61*x + Q62*y + Q63*z ;

      sa := sqrt(x1 * x1 + y1 * y1 + z1 * z1) ;

        { Convert to spherical coordinates (Vr, Par only) }
        { ----------------------------------------------- }

      If ( Par <> 0.0 ) Then
         Vr := ( x1 * vx1 + y1 * vy1 + z1 * vz1 ) /
               ( 21.095 * Par * sr * sa ) ;
      Par := Par/sa ;

        { Including the effects of the E-terms of aberration }
        { -------------------------------------------------- }

      x1 := x1/sa ;
      y1 := y1/sa ;
      z1 := z1/sa ;

      vx1 := vx1/sa ;
      vy1 := vy1/sa ;
      vz1 := vz1/sa ;

      sa := x1 ;
      ca := y1 ;
      sd := z1 ;

      x1 := x1 + Ax ;
      y1 := y1 + Ay ;
      z1 := z1 + Az  ;



      i := 0 ;

      Repeat

          If ( i > 0 )  Then
            Begin
              sa := x ;
              ca := y ;
              sd := z ;
            End ;

          i := i + 1 ;

          F := ( sa * Ax + ca * Ay + sd * Az ) /
               ( sa * sa + ca * ca + sd * sd ) ;

          x := x1 - sa * F ;
          y := y1 - ca * F ;
          z := z1 - sd * F ;

      Until (    ( i <= 13 )
              Or
                 (     ( abs ( x - sa ) > 1.0e-13 )
                   Or  ( abs ( y - ca ) > 1.0e-13 )
                   Or  ( abs ( z - sd ) > 1.0e-13 )
                 )
            ) ;



      F := ( x * vax + y * vay + z * vaz ) /
           ( x *   x + y *   y + z *   z ) ;

      vx := vx1 + vax - F * x ;
      vy := vy1 + vay - F * y ;
      vz := vz1 + vaz - F * z ;

       { Convert to spherical coordinates (Ra, Decl, Pmra, Pmdecl only) }
       { -------------------------------------------------------------- }

      sa := x * x + y * y ;
      ca := sa + z * z ;
      sd := x * vx + y * vy ;
      cd := sqrt(sa) ;


      Ra  := ArcTan ( y / x ) ;
 	              IF ( x  < 0.0 )  THEN  Ra := Ra + Pi  ;
		      IF ( Ra < 0.0 )  THEN  Ra := Ra + Pi2 ;

      Decl := ArcTan ( z / cd ) ;

      If ( sa = 0 )  Then
        Begin
          Pmra := 0 ;
          Pmdecl := 0 ;
        End
       Else
        Begin
          Pmra   := (  x * vy - y * vx ) / ( sa *      sr) ;
          Pmdecl := ( vz * sa - z * sd ) / ( ca * cd * sr) ;
        End ;

    End ; { J2000 -> B1950 }

  End ; { F4FK5 }


 END.
