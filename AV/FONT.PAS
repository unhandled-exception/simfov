
{$O+,F+}

Unit Font;
interface

procedure load8x8;      { òp®‰‚ 8x8 }
procedure unld8x8;

implementation
uses
 Dos;
const
_8x8  : array  [ 0 .. 128, 0 .. 7 ] of byte =
(
 (   0,  0,  0,  0,  0,  0,  0,  0 ),
 (  14, 30, 54,102,254,198,198,  0 ),
 ( 252,192,192,252,198,198,252,  0 ),
 ( 248,204,204,252,198,198,252,  0 ),
 ( 252,192,192,192,192,192,192,  0 ),
 ( 126,102,102,102,102,102,255,195 ),
 ( 252,192,192,248,192,192,254,  0 ),
 ( 219,219,126, 24,126,219,219,  0 ),
 (  60,102,  6, 60,  6,198,124,  0 ),
 ( 198,198,206,222,246,230,198,  0 ),
 ( 214,198,206,222,246,230,198,  0 ),
 ( 198,204,216,248,204,198,198,  0 ),
 (   6, 14, 30, 54,102,198,198,  0 ),
 ( 198,238,254,214,198,198,198,  0 ),
 ( 198,198,198,254,198,198,198,  0 ),
 ( 124,198,198,198,198,198,124,  0 ),
 ( 254,198,198,198,198,198,198,  0 ),
 ( 252,198,198,252,192,192,192,  0 ),
 ( 124,198,192,192,192,198,124,  0 ),
 ( 252, 48, 48, 48, 48, 48, 48,  0 ),
 ( 198,198,198,126,  6,198,124,  0 ),
 (  24,126,219,219,219,126, 24,  0 ),
 ( 195,102, 60, 24, 60,102,195,  0 ),
 ( 204,204,204,204,204,204,254,  6 ),
 ( 198,198,198,126,  6,  6,  6,  0 ),
 ( 214,214,214,214,214,214,254,  0 ),
 ( 214,214,214,214,214,214,255,  3 ),
 ( 240, 48, 48, 62, 51, 51, 62,  0 ),
 ( 194,194,194,242,218,218,242,  0 ),
 ( 192,192,192,252,198,198,252,  0 ),
 ( 124,198,  6, 30,  6,198,124,  0 ),
 ( 206,219,219,251,219,219,206,  0 ),
 ( 126,198,198,126, 54,102,198,  0 ),
 (   0,  0,120, 12,124,204,126,  0 ),
 (   4,120,192,248,204,204,120,  0 ),
 (   0,  0,248,204,248,198,252,  0 ),
 (   0,  0,252,192,192,192,192,  0 ),
 (   0,  0,126,102,102,102,255,195 ),
 (   0,  0,120,204,252,192,124,  0 ),
 (   0,  0,219,126, 24,126,219,  0 ),
 (   0,  0,120,204, 24,204,120,  0 ),
 (   0,  0,204,204,220,236,204,  0 ),
 (  48,  0,204,204,220,236,204,  0 ),
 (   0,  0,204,216,240,204,204,  0 ),
 (   0,  0, 14, 30, 54,102,198,  0 ),
 (   0,  0,198,238,214,198,198,  0 ),
 (   0,  0,204,204,252,204,204,  0 ),
 (   0,  0,120,204,204,204,120,  0 ),
 (   0,  0,252,204,204,204,204,  0 ),
 (  56,108,198,198,108,108,238,  0 ), { Omega, EGA8x8.fnt }
 (  24, 24,  0, 56, 24, 48, 48, 28 ), { I talic           }
 ( 120, 12, 14, 30, 54, 38, 98,195 ), { Lambda            }
 ( 124,198,198,124, 96, 48, 24, 48 ), { Ro                }
 (  16, 16, 16, 16,240, 16, 16, 16 ),
 (  16, 16,240, 16,240, 16, 16, 16 ),
 (  20, 20, 20, 20,244, 20, 20, 20 ),
 (   0,  0,  0,  0,252, 20, 20, 20 ),
 (   0,  0,240, 16,240, 16, 16, 16 ),
 (  20, 20,244,  4,244, 20, 20, 20 ),
 (  20, 20, 20, 20, 20, 20, 20, 20 ),
 (   0,  0,252,  4,244, 20, 20, 20 ),
 (  20, 20,244,  4,252,  0,  0,  0 ),
 (  20, 20, 20, 20,252,  0,  0,  0 ),
 (  16, 16,240, 16,240,  0,  0,  0 ),
 (   0,  0,  0,  0,240, 16, 16, 16 ),
 (  16, 16, 16, 16, 31,  0,  0,  0 ),
 (  16, 16, 16, 16,255,  0,  0,  0 ),
 (   0,  0,  0,  0,255, 16, 16, 16 ),
 (  16, 16, 16, 16, 31, 16, 16, 16 ),
 (   0,  0,  0,  0,255,  0,  0,  0 ),
 (  16, 16, 16, 16,255, 16, 16, 16 ),
 (  16, 16, 31, 16, 31, 16, 16, 16 ),
 (  20, 20, 20, 20, 23, 20, 20, 20 ),
 (  20, 20, 23, 16, 31,  0,  0,  0 ),
 (   0,  0, 31, 16, 23, 20, 20, 20 ),
 (  20, 20,247,  0,255,  0,  0,  0 ),
 (   0,  0,255,  0,247, 20, 20, 20 ),
 (  20, 20, 23, 16, 23, 20, 20, 20 ),
 (   0,  0,255,  0,255,  0,  0,  0 ),
 (  20, 20,247,  0,247, 20, 20, 20 ),
 (  16, 16,255,  0,255,  0,  0,  0 ),
 (  20, 20, 20, 20,255,  0,  0,  0 ),
 (   0,  0,255,  0,255, 16, 16, 16 ),
 (   0,  0,  0,  0,255, 20, 20, 20 ),
 (  20, 20, 20, 20, 31,  0,  0,  0 ),
 (  16, 16, 31, 16, 31,  0,  0,  0 ),
 (   0,  0, 31, 16, 31, 16, 16, 16 ),
 (   0,  0,  0,  0, 31, 20, 20, 20 ),
 (  20, 20, 20, 20,255, 20, 20, 20 ),
 (  16, 16,255, 16,255, 16, 16, 16 ),
 (  16, 16, 16, 16,240,  0,  0,  0 ),
 (   0,  0,  0,  0, 31, 16, 16, 16 ),
 ( 255,255,255,255,255,255,255,255 ),
 (   0,  0,  0,  0,255,255,255,255 ),
 ( 240,240,240,240,240,240,240,240 ),
 (  15, 15, 15, 15, 15, 15, 15, 15 ),
 ( 255,255,255,255,  0,  0,  0,  0 ),
 (   0,  0,248,204,204,248,192,192 ),
 (   0,  0,120,204,192,204,120,  0 ),
 (   0,  0,252, 48, 48, 48, 48,  0 ),
 (   0,  0,204,204,124, 12,204,120 ),
 (   0, 24,126,219,219,126, 24, 24 ),
 (   0,  0,198,108, 56,108,198,  0 ),
 (   0,  0,204,204,204,204,254,  6 ),
 (   0,  0,204,204,124, 12, 12,  0 ),
 (   0,  0,214,214,214,214,254,  0 ),
 (   0,  0,214,214,214,214,255,  3 ),
 (   0,  0,240, 48, 62, 51, 62,  0 ),
 (   0,  0,194,194,242,218,242,  0 ),
 (   0,  0,192,192,248,204,248,  0 ),
 (   0,  0,124,198, 30,198,124,  0 ),
 (   0,  0,206,219,251,219,206,  0 ),
 (   0,  0,124,204,124,108,204,  0 ),
 (  96,120,108,108,  0,  0,  0,  0 ),
 ( 124, 84, 84, 84,  0,  0,  0,  0 ),
 (  28, 50, 24, 76, 56,  0,  0,  0 ),
 (  48, 72, 72, 48,  0,  0,  0,  0 ),
 (  24, 48, 96,192,  0,  0,  0,  0 ),
 (  20, 40, 80,160,  0,  0,  0,  0 ),
 (   0, 12,  6,255,  6, 12,  0,  0 ),
 (   0, 48, 96,255, 96, 48,  0,  0 ),
 (  48, 48, 48, 48,252,120, 48,  0 ),
 (   0, 48,120,252, 48, 48, 48, 48 ),
 (   0,  6,  6, 38,102,254, 96, 32 ),
 (   0,  2,118,152,156,118,  0,  0 ),
 (  28, 48, 24, 62,102,102, 60,  0 ),
 (   0, 76, 74,106, 60,  8,  8,  0 ),
 (   0,120, 12, 30, 54, 54, 54, 99 ),
 (   0,  0,  0,  0,  0,  0,  0,  0 ) );
var
 FHB_initial_address : pointer;

procedure load8x8;
begin
 getintvec($1F,FHB_initial_address);
 setintvec($1F,@_8x8[1][0])        ;
end;

procedure unld8x8;
begin
 setintvec($1F,FHB_initial_address);
end;

end.